plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
    id 'com.google.android.libraries.mapsplatform.secrets-gradle-plugin'
    id 'com.google.gms.google-services'


}

apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'

android {
    namespace 'com.gb.kotlin_1728_2_1'
    compileSdk 31
    buildFeatures {
        viewBinding true
    }

    buildTypes.each {

        /* для релизной и дебажной версии создаём файл properties,
         *  в него загружаем содержимое файла
         *  apikey.properties , по ключу считывваем свойства, считали ключ в переменную
         *  и внедряем в buildConfigField
         *  Автогенерируемый файл BuildConfig из apikey.properties на этапе компиляции
         *  значение прописывает в поле WEATHER_API_KEY и ключа не будет в общем доступе
         *  ключ ищите по адресу https://developer.tech.yandex.ru/services
         */

        Properties properties = new Properties()
        properties.load(project.rootProject.file("apikey.properties").newDataInputStream())
        def apiKey = properties.getProperty("yandex_weather_api_key", "")
        it.buildConfigField "String", "WEATHER_API_KEY", apiKey

        properties.load(project.rootProject.file("apikey.properties").newDataInputStream())
        def apiKeyMap = properties.getProperty("MAPS_API_KEY", "")
        it.buildConfigField "String", "MAPS_API_KEY", apiKeyMap
    }


    defaultConfig {
        applicationId "com.gb.kotlin_1728_2_1"
        minSdk 28
        targetSdk 31
        versionCode 1
        versionName "1.0"

    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }




compileOptions {
    sourceCompatibility JavaVersion.VERSION_1_8
    targetCompatibility JavaVersion.VERSION_1_8
}
kotlinOptions {
    jvmTarget = '1.8'
}
    }

dependencies {
    // Vector - SVG
    // Coil - svg
    implementation 'io.coil-kt:coil-svg:1.3.2'
    // Images
    // Glide
    implementation 'com.github.bumptech.glide:glide:4.12.0'
    implementation 'com.google.android.gms:play-services-maps:18.0.2'
    implementation 'com.google.firebase:firebase-messaging-ktx:23.0.3'
    annotationProcessor 'com.github.bumptech.glide:compiler:4.12.0'

    // Picasso
    implementation 'com.squareup.picasso:picasso:2.71828'

    // Coil
    implementation 'io.coil-kt:coil:1.3.2'

    implementation 'com.squareup.retrofit2:retrofit:2.9.0'
    // implementation 'com.squareup.okhttp3:okhttp:3.14.9'
    implementation 'com.squareup.retrofit2:converter-gson:2.9.0'
    implementation 'androidx.core:core-ktx:1.7.0'
    implementation 'androidx.appcompat:appcompat:1.4.1'
    implementation 'com.google.android.material:material:1.5.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.3'
    implementation 'androidx.work:work-runtime-ktx:2.7.1'

    // Room
    implementation 'androidx.room:room-runtime:2.4.2'
    kapt 'androidx.room:room-compiler:2.4.2'


}